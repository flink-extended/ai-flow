/*
 * Copyright 2022 The AI Flow Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
syntax = "proto3";

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_package = "org.aiflow.client.proto";
option py_generic_services = true;
option go_package = "/ai_flow";

package ai_flow;


message NamespaceProto {
    string name = 1;
    map<string, string> properties = 2;
}

message WorkflowProto {
    int64 uuid = 1;
    string name = 2;
    string namespace = 3;
    string content = 4;
    bytes pickled_workflow = 5;
    google.protobuf.Int64Value create_time = 6;
    google.protobuf.Int64Value update_time = 7;
    bool is_enabled = 8;
    google.protobuf.Int64Value event_offset = 9;
}

message WorkflowExecutionProto {
    int64 uuid = 1;
    int64 workflow_id = 2;
    google.protobuf.Int64Value begin_date = 3;
    google.protobuf.Int64Value end_date = 4;
    google.protobuf.StringValue status = 5;
    google.protobuf.StringValue run_type = 6;
    int64 snapshot_id = 7;
    google.protobuf.Int64Value event_offset = 8;
}

message TaskExecutionProto {
    int64 uuid = 1;
    int64 workflow_execution_id = 2;
    string task_name = 3;
    int64 sequence_number = 4;
    int64 try_number = 5;
    google.protobuf.Int64Value begin_date = 6;
    google.protobuf.Int64Value end_date = 7;
    google.protobuf.StringValue status = 8;
}

message WorkflowSnapshotProto {
    int64 uuid = 1;
    int64 workflow_id = 2;
    google.protobuf.Int64Value create_time = 3;
    bytes workflow_object = 4;
    google.protobuf.StringValue uri = 5;
    google.protobuf.StringValue signature = 6;
}

message WorkflowScheduleProto {
    int64 uuid = 1;
    int64 workflow_id = 2;
    google.protobuf.StringValue expression = 3;
    bool is_paused = 4;
    google.protobuf.Int64Value create_time = 5;
}

message WorkflowTriggerProto {
    int64 uuid = 1;
    int64 workflow_id = 2;
    bytes rule = 3;
    bool is_paused = 4;
    google.protobuf.Int64Value create_time = 5;
}

message IdRequest {
    int64 id = 1;
}

message NameRequest {
    string name = 1;
}

message WorkflowIdentifier {
    string namespace = 1;
    string workflow_name = 2;
}

message TaskExecutionIdentifier {
    int64 workflow_execution_id = 1;
    string task_name = 2;
}

message ListRequest {
    int64 page_size = 1;
    int64 offset = 2;
}

message Response {
    string return_code = 1;
    string error_msg = 2;
    string data = 3;
}



enum ReturnCode {
    // Success response, which represents request execution success.
    SUCCESS = 0;
    //
    // Internal, system-level error codes, which generally cannot be resolved by the user, but
    // instead are due to service issues.
    //
    // Generic internal error occurred.
    INTERNAL_ERROR = 1;
    // An internal system could not be contacted due to a period of unavailability.
    TEMPORARILY_UNAVAILABLE = 2;
    // Indicates that an IOException has been internally thrown.
    IO_ERROR = 3;
    // The request is invalid.
    BAD_REQUEST = 4;
    //
    // Common application-level error codes, which were caused by the user input but may be returned
    // by multiple services.
    //
    // Supplied value for a parameter was invalid (e.g., giving a number for a string parameter).
    INVALID_PARAMETER_VALUE = 1000;
    // Indicates that the given API endpoint does not exist.
    ENDPOINT_NOT_FOUND = 1001;
    // Indicates that the given API request was malformed.
    MALFORMED_REQUEST = 1002;
    // If one or more of the inputs to a given RPC are not in a valid state for the action.
    INVALID_STATE = 1003;
    // If a given user/entity doesn't have the required permission(s) to perform an action
    PERMISSION_DENIED = 1004;
    // If a given user/entity is trying to use a feature which has been disabled
    FEATURE_DISABLED = 1005;
    // If customer-provided credentials are not authorized to perform an operation
    CUSTOMER_UNAUTHORIZED = 1006;
    // If the API request is rejected due to throttling
    REQUEST_LIMIT_EXCEEDED = 1007;
    // Operation was performed on a resource that already exists.
    RESOURCE_ALREADY_EXISTS = 2001;
    // Operation was performed on a resource that does not exist.
    RESOURCE_DOES_NOT_EXIST = 2002;
    // DBFS
    QUOTA_EXCEEDED = 3001;
    MAX_BLOCK_SIZE_EXCEEDED = 3002;
    MAX_READ_SIZE_EXCEEDED = 3003;
}

enum DataTypeProto {
    DATA_TYPE_UNSPECIFIED = 0;
    INT32 = 1;
    INT64 = 2;
    FLOAT32 = 3;
    FLOAT64 = 4;
    STRING = 5;
    INT32ARRAY = 6;
    INT64ARRAY = 7;
    FlOAT32ARRAY = 8;
    FLOAT64ARRAY = 9;
    STRINGARRAY = 10;
    BYTES = 11;
    BYTESARRAY = 12;
}
